{"ast":null,"code":"import _classCallCheck from \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation.js';\nimport Logo from '../components/Logo/Logo.js';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from \"../components/Rank/Rank\";\nimport ParticleComp from \"../components/ParticleComp/ParticleComp\";\nimport FaceRecognition from \"../components/FaceRecognition/FaceRecognition\";\nimport Signin from \"../components/Signin/Signin\";\n\nvar Clarifai = require('clarifai'); // API key should be changed and secured later, not posting this on github\n\n\nvar app = new Clarifai.App({\n  apiKey: '11f16fba3bba4b98a5229d8e02661a23'\n}); // https://samples.clarifai.com/face-det.jpg\n\nvar getFaceBox = function getFaceBox(response) {\n  var faceBox = response['outputs'][0]['data']['regions'];\n  var image = document.getElementById('inputImage');\n  var width = Number(image.width);\n  var height = Number(image.height);\n  return faceBox.map(function (item) {\n    return {\n      leftCol: item.region_info.bounding_box.left_col * width,\n      topRow: item.region_info.bounding_box.top_row * height,\n      rightCol: width - item.region_info.bounding_box.right_col * width,\n      bottomRow: height - item.region_info.bounding_box.bottom_row * height\n    };\n  });\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.model = function (imageLink) {\n      var resp = {};\n      app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", imageLink).then(function (response) {\n        resp = getFaceBox(response);\n\n        _this.setState({\n          faceBox: resp\n        });\n\n        console.log(response);\n        console.log(_this.faceBox);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      return resp;\n    };\n\n    _this.imageLinkChange = function (event) {\n      _this.setState({\n        imageLink: event.target.value\n      });\n    };\n\n    _this.imageLinkSubmit = function (event) {\n      _this.model(_this.state.imageLink);\n    };\n\n    _this.state = {\n      imageLink: '',\n      faceBox: []\n    };\n    return _this;\n  } // model has to be in the Class to execture setState(). Since model is a promise and execute after the call stack.\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ParticleComp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        imageLinkChange: this.imageLinkChange,\n        imageLinkSubmit: this.imageLinkSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        imgLink: this.state.imageLink,\n        faceBox: this.state.faceBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/David/Desktop/Portfolio/Machine-Learning-Face-Recognition/src/containers/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","ParticleComp","FaceRecognition","Signin","Clarifai","require","app","App","apiKey","getFaceBox","response","faceBox","image","document","getElementById","width","Number","height","map","item","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","model","imageLink","resp","models","predict","then","setState","console","log","catch","err","imageLinkChange","event","target","value","imageLinkSubmit","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation.js';\nimport Logo from '../components/Logo/Logo.js';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from \"../components/Rank/Rank\";\nimport ParticleComp from \"../components/ParticleComp/ParticleComp\";\nimport FaceRecognition from \"../components/FaceRecognition/FaceRecognition\";\nimport Signin from \"../components/Signin/Signin\";\n\nconst Clarifai = require('clarifai');\n\n// API key should be changed and secured later, not posting this on github\nconst app = new Clarifai.App({\n   apiKey: '11f16fba3bba4b98a5229d8e02661a23'\n});\n\n// https://samples.clarifai.com/face-det.jpg\n\n\n\nconst getFaceBox = (response) => {\n   const faceBox = response['outputs'][0]['data']['regions'];\n   const image = document.getElementById('inputImage');\n   const width = Number(image.width);\n   const height = Number(image.height);\n   return(\n       faceBox.map( (item) => {\n            return (\n               {\n                  leftCol: item.region_info.bounding_box.left_col * width,\n                  topRow: item.region_info.bounding_box.top_row * height,\n                  rightCol: width - (item.region_info.bounding_box.right_col * width),\n                  bottomRow: height - (item.region_info.bounding_box.bottom_row * height)\n               }\n            );\n         }\n      )\n   );\n}\n\n\n\n\n\nclass App extends Component {\n\n   constructor() {\n      super();\n      this.state = {\n         imageLink : '',\n         faceBox: []\n      }\n   }\n\n   // model has to be in the Class to execture setState(). Since model is a promise and execute after the call stack.\n   model = (imageLink) => {\n\n      let resp = {};\n      app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", imageLink)\n      .then(\n         (response) => {\n         resp = getFaceBox(response);\n         this.setState({faceBox: resp});\n         console.log(response);\n         console.log(this.faceBox);\n         })\n      .catch(\n         (err) => {console.log(err);}\n      );\n      return(resp);\n   }\n\n\n   imageLinkChange = (event) => {\n      this.setState({imageLink: event.target.value});\n   }\n\n   imageLinkSubmit = (event) => {\n      this.model(this.state.imageLink);\n   }\n\n  render() {\n    return (\n      <div className=\"App\">\n         <ParticleComp />\n         <Navigation />\n         <Logo />\n         <ImageLinkForm imageLinkChange={this.imageLinkChange} imageLinkSubmit={this.imageLinkSubmit} />\n         <Rank />\n         <FaceRecognition imgLink={this.state.imageLink} faceBox={this.state.faceBox}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}